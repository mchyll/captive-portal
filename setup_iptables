#!/bin/bash

IP_ADDRESS=$1  # the ip address of Loke, read from CLI arguments


# Flush existing rules
iptables -F
iptables -t nat -F

# Policies
iptables -P INPUT ACCEPT
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

# Drop all ipv6 traffic, because we're lazy
ip6tables -P INPUT ACCEPT
ip6tables -P FORWARD DROP
ip6tables -P OUTPUT ACCEPT

iptables -t nat -P PREROUTING ACCEPT
iptables -t nat -P INPUT ACCEPT
iptables -t nat -P OUTPUT ACCEPT
iptables -t nat -P POSTROUTING ACCEPT

# DHCP, client to server
iptables -A FORWARD -p udp --sport 68 --dport 67 -j ACCEPT
# DHCP, server to client
iptables -A FORWARD -p udp --sport 67 --dport 68 -j ACCEPT

# UDP DNS, request from user to server
iptables -A FORWARD -p udp --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
# UDP DNS, response from server back to user
iptables -A FORWARD -p udp --sport 53 -m state --state ESTABLISHED -j ACCEPT

# TCP DNS, request from user to server
iptables -A FORWARD -p tcp --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
# TCP DNS, response from server back to user
iptables -A FORWARD -p tcp --sport 53 -m state --state ESTABLISHED -j ACCEPT

# Allow HTTP and HTTPS traffic to captive portal
iptables -A FORWARD -p tcp -m multiport --dports 80,443 -d ${IP_ADDRESS} -j ACCEPT

# Redirect other HTTP traffic to captive portal (can't redirect HTTPS traffic, since the cert would be invalid)
iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination ${IP_ADDRESS}:80
